{"version":3,"sources":["resources/cinnamonRolls.jpg","resources/whiteBread.jpg","resources/cinnamonRaisin.jpg","resources/chocolateChip.jpg","resources/molassesCookies.jpg","resources/vegan.png","resources/glutenFree.png","Common.js","resources/recipeText.js","App.js","resources/recipeReviews.js","Finder.js","NotFound.js","Recipes.js","index.js","resources/logo_en.png","resources/sugarCookies.jpg"],"names":["module","exports","topStyles","makeStyles","logo","width","height","alignRight","right","position","marginRight","toolBar","padding","bottomStyles","appBar","bottom","top","divideStyle","divideColour","backgroundColor","NavTab","withStyles","root","textTransform","fontSize","Tab","Divide","classes","Divider","className","getRatingAverage","ratings","ratingAvg","forEach","rating","length","Math","round","toFixed","Footer","AppBar","Typography","align","NavBar","lang","setLang","history","useHistory","initialState","window","location","pathname","includes","undefined","state","tab","useState","tabValue","setTabValue","changeTab","push","Toolbar","variant","Tabs","value","label","onClick","RadioGroup","aria-label","row","name","onChange","event","target","FormControlLabel","control","Radio","href","host","src","alt","recipeData","paths","names","vegan","glutenFree","types","images","SugarCookies","CinnamonRolls","WhiteBread","CinnamonRaisin","ChocolateChip","MolassesCookies","descriptions","ingredients","instructions","useStyles","standardText","bigImage","paddingLeft","paddingRight","sideAlign","marginLeft","maxWidth","sideAlignText","bold","fontWeight","App","useLocation","aboutRef","useRef","recipeRef","contactRef","initialLang","useEffect","setTimeout","hash","scroll","current","getBoundingClientRect","Grid","container","justify","ref","Button","color","recipeReviews","reviewerNames","reviews","theme","formControl","margin","spacing","minWidth","selectEmpty","marginTop","recipeMargin","dietIcon","recipeDescription","paragraphFade","background","WebkitBackgroundClip","WebkitTextFillColor","recipeImage","standardFont","minorTitle","Finder","scrollTo","initialRecipesFound","Array","i","recipesFound","setRecipesFound","recipeText","setRecipeText","preferences","setPreferences","searchStr","setSearchStr","recipeType","setRecipeType","Icons","rIndex","Vegan","title","GlutenFree","updatePreference","preference","generateList","isVegan","isGlutenFree","newRecipes","searchActive","typeActive","toLowerCase","alignItems","item","TextField","id","Checkbox","FormControl","Select","displayEmpty","inputProps","MenuItem","map","ratingNum","parseFloat","reviewWord","maxDescIndex","min","shortDescription","substring","key","xs","orientation","flexItem","Rating","precision","readOnly","standard","NotFound","recipeParagraph","whiteSpace","recipeStandard","textField","reviewerName","Recipes","configureAnchors","offset","scrollDuration","path","indexOf","tmpIndex","setRatingAvg","ratingAvgNum","setRatingAvgNum","setReviewWord","setReviewerNames","setRatings","setReviews","newName","setNewName","newReview","setNewReview","newRating","setNewRating","showNameError","setShowNameError","_","newValue","e","error","helperText","multiline","rows","newNames","concat","newRatings","newReviews","newRatingAvg","newRatingAvgNum","postReview","index","ReactDOM","render","exact","document","getElementById"],"mappings":"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","file":"static/js/main.1b550121.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cinnamonRolls.ea5b4e59.jpg\";","module.exports = __webpack_public_path__ + \"static/media/whiteBread.1afee3ff.jpg\";","module.exports = __webpack_public_path__ + \"static/media/cinnamonRaisin.1fef6288.jpg\";","module.exports = __webpack_public_path__ + \"static/media/chocolateChip.2b615e27.jpg\";","module.exports = __webpack_public_path__ + \"static/media/molassesCookies.c05089c0.jpg\";","module.exports = __webpack_public_path__ + \"static/media/vegan.3d4ff5b3.png\";","module.exports = __webpack_public_path__ + \"static/media/glutenFree.5ff1f820.png\";","import {useHistory} from \"react-router-dom\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport logo from \"./resources/logo_en.png\";\r\nimport React, {Fragment, useState} from \"react\";\r\nimport {withStyles} from \"@material-ui/core\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\n\r\nconst topStyles = makeStyles(() => ({\r\n    logo: {\r\n        width: \"20em\",\r\n        height: \"auto\"\r\n    },\r\n    alignRight: {\r\n        right: \"0\",\r\n        position: \"absolute\",\r\n        marginRight: \"2em\"\r\n    },\r\n    toolBar: {\r\n        padding: \"0\"\r\n    }\r\n}));\r\n\r\nconst bottomStyles = makeStyles(() => ({\r\n    appBar: {\r\n        bottom: \"0\",\r\n        top: \"auto\"\r\n    }\r\n}));\r\n\r\nexport const divideStyle = makeStyles(() => ({\r\n    divideColour: {\r\n        backgroundColor: \"#F50057\",\r\n        height: \"0.15em\"\r\n    }\r\n}));\r\n\r\nconst NavTab = withStyles({\r\n    root: {\r\n        textTransform: \"none\",\r\n        fontSize: \"1.5em\",\r\n        \"&:hover\": {\r\n            backgroundColor: \"#5465BF\"\r\n        }\r\n    }\r\n})(Tab);\r\n\r\nexport function Divide() {\r\n    const classes = divideStyle();\r\n    return (\r\n        <Fragment>\r\n            <br/>\r\n            <Divider className={classes.divideColour}/>\r\n            <br/>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport function getRatingAverage(ratings) {\r\n    let ratingAvg = 0;\r\n    ratings.forEach(rating => {\r\n        ratingAvg += rating;\r\n    });\r\n    ratingAvg /= ratings.length;\r\n    ratingAvg = (Math.round(ratingAvg * 10) / 10).toFixed(1);\r\n    return ratingAvg;\r\n}\r\n\r\nfunction NavBar({lang, setLang}) {\r\n    const history = useHistory();\r\n    const classes = topStyles();\r\n    const path = window.location.pathname;\r\n    let initialState = \"home\";\r\n    if (path.includes(\"/recipes\")) {\r\n        initialState = \"recipes\";\r\n    }\r\n    if (history.location.state !== undefined && history.location.state.tab !== undefined) {\r\n        initialState = history.location.state.tab;\r\n    }\r\n    const [tabValue, setTabValue] = useState(initialState);\r\n\r\n    function changeTab(tab) {\r\n        if (tab !== \"recipes\" || tabValue !== \"recipes\") {\r\n            if (tab === \"home\") {\r\n                history.push(\"/\", {tab: tab, lang: lang});\r\n            } else {\r\n                history.push(\"/#\" + tab, {tab: tab, lang: lang});\r\n            }\r\n        }\r\n        setTabValue(tab);\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <AppBar position=\"sticky\">\r\n                <Toolbar className={classes.toolBar} variant=\"dense\">\r\n                    <Tabs value={tabValue}>\r\n                        <NavTab value=\"home\" label=\"Home\" onClick={() => changeTab(\"home\")}/>\r\n                        <NavTab value=\"about\" label=\"About\" onClick={() => changeTab(\"about\")}/>\r\n                        <NavTab value=\"recipes\" label=\"Recipes\" onClick={() => changeTab(\"recipes\")}/>\r\n                        <NavTab value=\"contact\" label=\"Contact Us\" onClick={() => changeTab(\"contact\")}/>\r\n                    </Tabs>\r\n                    <RadioGroup className={classes.alignRight}\r\n                                aria-label=\"gender\" row name=\"language\" value={lang === 0 ? \"english\" : \"french\"}\r\n                                onChange={(event) => setLang(event.target.value === \"english\" ? 0 : 1)}>\r\n                        <FormControlLabel value=\"english\" control={<Radio/>} label=\"English\"/>\r\n                        <FormControlLabel value=\"french\" control={<Radio/>} label=\"Français\"/>\r\n                    </RadioGroup>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <a href={window.location.host} onClick={() => changeTab(\"home\")}>\r\n                <img src={logo} alt=\"Logo\" className={classes.logo}/>\r\n            </a>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport function Footer() {\r\n    const classes = bottomStyles();\r\n\r\n    return (\r\n        <AppBar position=\"static\" className={classes.appBar}>\r\n            <Typography align=\"center\">Website by Chris Vettese</Typography>\r\n        </AppBar>\r\n    )\r\n}\r\n\r\nexport default NavBar;\r\n","import SugarCookies from \"./sugarCookies.jpg\";\r\nimport CinnamonRolls from \"./cinnamonRolls.jpg\";\r\nimport WhiteBread from \"./whiteBread.jpg\";\r\nimport CinnamonRaisin from \"./cinnamonRaisin.jpg\";\r\nimport ChocolateChip from \"./chocolateChip.jpg\";\r\nimport MolassesCookies from \"./molassesCookies.jpg\";\r\n\r\nconst recipeData = {\r\n    paths: [\"sugarCookies\", \"cinnamonRolls\", \"whiteBread\", \"cinnamonRaisin\", \"chocolateChip\", \"molassesCookies\"],\r\n    names: [\"Sugar Cookies\", \"Cinnamon Rolls\", \"White Bread\", \"Cinnamon Raisin Bagels\", \"Chocolate Chip Cookies\", \"Molasses Cookies\"],\r\n    vegan: [false, false, false, false, true, false],\r\n    glutenFree: [false, false, true, false, false, false],\r\n    types: [\"cookies\", \"pastries\", \"bread\", \"bread\", \"cookies\", \"cookies\"],\r\n    images: [SugarCookies, CinnamonRolls, WhiteBread, CinnamonRaisin, ChocolateChip, MolassesCookies],\r\n    descriptions: [\r\n        \"We have found The Best Sugar Cookie Recipe ever and we couldn’t wait to share it so that everyone can have super yummy homemade sugar cookies.\\n\\nAdd the 4 sticks (2 cups) of butter and 2 cups of white sugar to your mixer.  A word about the butter, we use Sweet Cream Salted Butter when we are baking and I think it tastes great with these sugar cookies too.  The butter needs to be softened but still cold.  A prime culprit for dry sugar cookie dough is butter than is too warm and soft.  I let the butter sit out on the counter for just under an hour before I start making the cookies – this seems to be the perfect amount of time for me.  The butter is still cold to the touch but you can press into the stick with your fingers. In the past, when in a rush, I have softened the butter in the microwave but inevitably the dough that I get is on the “crumbly” side.\",\r\n        \"Do you love homemade cinnamon rolls, but are nervous to bake with yeast? Join the club. I was too! But this recipe changed everything for me. They’re perfect for anyone who wants to learn how to bake with yeast. Unlike overnight cinnamon rolls that require hours of rise time, plus a 2nd rise time after the rolls are shaped, this easy cinnamon rolls recipe only requires 1 rise.\\n\\nHere’s my #1 tip: I recommend using a strong and dependable yeast. Red Star Platinum Yeast is an instant yeast, which cuts down on rise time. Its careful formula strengthens your dough and makes working with yeast simple. And simple is always good, right?\",\r\n        \"Several months ago, I did the gluten free diet myself for a few months and some of the breads I would buy scared me. When going gluten free, I think one of the best recipes to have is a good gluten free bread recipe, because it’s a staple pantry item and when you have that it makes being gluten free seem a bit easier. I tried a few recipes for gluten free bread and this is definitely the one I liked most.\\n\\nMy whole family actually loved it, and my husband couldn’t get over how good it was. He even said he liked it better than regular white bread, believe it or not. He likes that it has more substance to it. If you are new to gluten-free bread, yes it does have a different texture, which will quickly grow on you. The taste of this bread is amazing! When you eat a piece warm out of the oven it’s so dreamy.\",\r\n        \"Let’s all agree that cinnamon raisin bagels are the best bagel variety. Everything bagels, you hold nothing on cinnamon and raisins. Today I’m teaching you how to make homemade cinnamon raisin bagels with a few basic ingredients and a deliciously dense bread dough.\\n\\nThese bagels are:\\n\\u2022 Hot ‘n’ fresh\\n\\u2022 Extra chewy\\n\\u2022 Soft in the center\\n\\u2022 Golden brown\\n\\u2022 Sweet & cinnamon-y\\n\\nLet’s do this!\",\r\n        \"Like most people, I LOVE cookies! They’re one of my favorite things to bake, eat and gift! There’s nothing better than seeing the look on someone’s face when you give them a fresh batch of homemade chocolate chip cookies. Warm, sweet, and so gooey… what’s not to love?\\n\\nMore than a few of my friends live vegan lifestyles, so I’ve been feeling inspired to create a delicious recipe for soft and chewy vegan chocolate chip cookies! I wanted the recipe to taste just like my classic everyday chocolate chip cookies, but be made with cruelty-free ingredients that everyone can enjoy.\",\r\n        \"Molasses cookies have always been my top choice because they bring me right back to my childhood. I grew up helping my mom bake them. After rolling the dough in the sugar and watching them bake through the little oven window, my sweet reward was biting into a warm cookie fresh from the oven. In addition to the nostalgia, the soft texture paired with cozy molasses puts them above any other cookie.\\n\\nSorry chocolate chip cookies, you don’t even compare.\"\r\n    ],\r\n    ingredients: [\r\n        \"\\u20222 and 1/4 cups (281g) all-purpose flour (spoon & leveled)\\n\\u20221/2 teaspoon baking powder\\n\\u20221/4 teaspoon salt\\n\\u20223/4 cup (170g) unsalted butter, softened to room temperature\\n\\u20223/4 cup (150g) granulated sugar\\n\\u20221 large egg, at room temperature\\n\\u20222 teaspoons pure vanilla extract\\n\\u20221/4 or 1/2 teaspoon almond extract (optional, but makes the flavor outstanding)\\n\\u2022Royal Icing or Easy Glaze Icing\",\r\n        \"Rolls\\n\\u20222 and 3/4 cups (345g) all-purpose flour (spoon & leveled)\\n\\u20221/4 cup (50g) granulated sugar\\n\\u20221 teaspoon salt\\n\\u20222 and 1/4 teaspoons Red Star Platinum Yeast or any instant yeast (1 packet)\\n\\u20221/2 cup (120ml) whole milk\\n\\u20221/4 cup (60ml) water\\n\\u20223 Tablespoons unsalted butter\\n\\u20221 large egg\\n\\nFilling\\n\\u20223 Tablespoons (45g) unsalted butter, softened to room temperature\\n\\u20221 Tablespoon ground cinnamon\\n\\u20221/4 cup (50g) granulated sugar or packed light or dark brown sugar\\n\\nIcing\\n\\u20221 cup (120g) confectioners’ sugar\\n\\u20221/2 teaspoon pure vanilla extract\\n\\u20222–3 Tablespoons (30-45ml) strong brewed coffee or milk\",\r\n        \"\\u20222 1/2 tsp active dry yeast\\n\\u20223 1/2 Tbsp sugar, divided\\n\\u20221/4 cup warm water, 110 degrees\\n\\u20221 1/4 cups milk, warmed to 110 degrees\\n\\u20222 Tbsp canola oil\\n\\u20222 Tbsp butter, softened, plus more for bread pan\\n\\u20223 large eggs\\n\\u20221 Tbsp lemon juice\\n\\u20222 cups (320g) white rice flour\\n\\u20221/2 cup (66g) tapioca flour\\n\\u20221/2 cup (81g) potato starch\\n\\u20221/3 cup (46g) cornstarch\\n\\u20221 Tbsp xanthan gum\\n\\u20221 3/4 tsp salt\\n\\u20221 tsp baking powder\",\r\n        \"\\u20221 and 1/2 cups (360ml) warm water\\n\\u20222 and 3/4 teaspoons Red Star® Quick-rise™ yeast\\n\\u20224 cups (500g) bread flour (spoon & leveled), plus more for work surface and hands\\n\\u20221 Tablespoon (13g) packed light or dark brown sugar (or barley malt syrup)\\n\\u20222 teaspoons salt\\n\\u20221 teaspoon pure vanilla extract\\n\\u20223/4 cup (112g) raisins\\n\\u20223 Tablespoons (38g) granulated sugar\\n\\u20221 teaspoon ground cinnamon\\n\\u2022coating the bowl: nonstick spray or 1 Tablespoon olive oil\",\r\n        \"\\u20221/2 cup coconut oil, solid but scoop-able\\n\\u20221 and 1/4 cups light brown sugar, packed\\n\\u20222 teaspoons vanilla extract\\n\\u20221/4 cup coconut milk (I like to use the thicker Thai variety, but any coconut milk will work)\\n\\u20221/4 cup unsweetened applesauce\\n\\u20222 and 1/3 cups all-purpose flour (be sure not to pack your flour)\\n\\u20221 teaspoon baking soda\\n\\u20221/2 teaspoon salt\\n\\u20222 cups chocolate chips (use vegan chocolate chips if vegan), divided\\n\\u2022Flaky sea salt, optional\",\r\n        \"\\u20222 and 1/4 cups (280g) all-purpose flour (spoon & leveled)\\n\\u20221 and 1/2 teaspoons baking soda\\n\\u20222 teaspoons ground ginger\\n\\u20221 and 1/4 teaspoons ground cinnamon\\n\\u20221/4 teaspoon ground cloves\\n\\u20221/4 teaspoon nutmeg\\n\\u20221/4 teaspoon salt\\n\\u20223/4 cup (170g) unsalted butter, softened to room temperature\\n\\u20221/2 cup (100g) packed light or dark brown sugar\\n\\u20221/4 cup (50g) granulated sugar\\n\\u20221/4 cup (60ml) unsulphured or dark molasses\\n\\u20221 large egg, at room temperature\\n\\u20222 teaspoons pure vanilla extract\"\r\n    ],\r\n    instructions: [\r\n        \"1)\\u00a0\\u00a0Whisk the flour, baking powder, and salt together in a medium bowl. Set aside.\\n\\n2)\\u00a0\\u00a0In a large bowl using a hand mixer or a stand mixer fitted with a paddle attachment, beat the butter and sugar together on high speed until completely smooth and creamy, about 2 minutes. Add the egg, vanilla, and almond extract (if using) and beat on high speed until combined, about 1 minute. Scrape down the sides and up the bottom of the bowl and beat again as needed to combine.\\n\\n3)\\u00a0\\u00a0Add the dry ingredients to the wet ingredients and mix on low until combined. Dough will be relatively soft. If the dough seems too soft and sticky for rolling, add 1 Tablespoon more flour.\\n\\n4)\\u00a0\\u00a0Divide the dough into 2 equal parts. Place each portion onto a piece of lightly floured parchment paper or a lightly floured silicone baking mat. With a lightly floured rolling pin, roll the dough out to about 1/4-inch thickness. The rolled-out dough can be any shape, as long as it is evenly 1/4-inch thick.\\n\\n5)\\u00a0\\u00a0Lightly dust one of the rolled-out doughs with flour. Place a piece of parchment on top. (This prevents sticking.) Place the 2nd rolled-out dough on top. Cover with plastic wrap or aluminum foil, then refrigerate for at least 1-2 hours and up to 2 days.\\n\\n6)\\u00a0\\u00a0Once chilled, preheat oven to 350°F (177°C). Line 2-3 large baking sheets with parchment paper or silicone baking mats. Carefully remove the top dough piece from the refrigerator. If it’s sticking to the bottom, run your hand under it to help remove it– see me do this in the video above. Using a cookie cutter, cut the dough into shapes. Re-roll the remaining dough and continue cutting until all is used. Repeat with 2nd piece of dough.\\n\\n7)\\u00a0\\u00a0Arrange cookies on baking sheets 3 inches apart. Bake for 11-12 minutes or until lightly browned around the edges. If your oven has hot spots, rotate the baking sheet halfway through bake time. Allow cookies to cool on the baking sheet for 5 minutes then transfer to a wire rack to cool completely before decorating.\\n\\n8)\\u00a0\\u00a0Decorate the cooled cookies with royal icing or my easy glaze icing. Feel free to tint either icing with gel food coloring. See post above for recommended decorating tools. No need to cover the decorated cookies as you wait for the icing to set. If it’s helpful, decorate the cookies directly on a baking sheet so you can stick the entire baking sheet in the refrigerator to help speed up the icing setting.\\n\\n9)\\u00a0\\u00a0Enjoy cookies right away or wait until the icing sets to serve them. Once the icing has set, these cookies are great for gifting or for sending. Plain or decorated cookies stay soft for about 5 days when covered tightly at room temperature. For longer storage, cover and refrigerate for up to 10 days.\",\r\n        \"1)\\u00a0\\u00a0Make the dough: Whisk the flour, sugar, salt, and yeast together in a large bowl. Set aside.\\n\\n2)\\u00a0\\u00a0Combine the milk, water, and butter together in a heatproof bowl. Microwave or use the stove and heat until the butter is melted and the mixture is warm to touch (about 110°F). Pour into the dry ingredients, add the egg, and stir until it forms a soft dough or use your mixer.\\n\\n3)\\u00a0\\u00a0On a lightly floured surface using floured hands, knead the dough for 3 minutes. Place in a lightly greased bowl (I use non-stick spray), cover loosely, and let rest for about 10 minutes.\\n\\n4)\\u00a0\\u00a0Fill the rolls: After 10 minutes, roll the dough out in a 14×8 inch rectangle. Spread the softened butter on top. Mix together the cinnamon and sugar. Sprinkle it all over the dough. Roll up the dough tightly. Cut into 10-12 even rolls and arrange in a lightly greased 9-inch round cake pan or pie dish.\\n\\n5)\\u00a0\\u00a0Rise: Tightly cover the rolls with aluminum foil or plastic wrap and allow to rise in a warm, draft-free environment for 60-90 minutes. See blog post above for my trick to this step!\\n\\n6)\\u00a0\\u00a0Bake the rolls: After the rolls have doubled in size, preheat the oven to 375°F (190°C). Bake for 25-28 minutes until lightly browned. If you notice the tops are getting too brown too quickly, loosely cover the rolls with aluminum foil and continue baking.\\n\\n7)\\u00a0\\u00a0Make the icing: Whisk the confectioners’ sugar, vanilla extract, and coffee/milk together. Drizzle or spread over warm rolls.\\n\\n8)\\u00a0\\u00a0Cover leftover frosted or unfrosted rolls tightly and store for up to 3 days at room temperature or up to 5 days in the refrigerator.\",\r\n        \"1)\\u00a0\\u00a0Pour yeast into the bowl of an electric stand mixer, along with 1/2 tsp sugar and 1/4 cup warm water. Whisk to dissolve yeast, then let rest 5 - 10 minutes to proof yeast. Add in remaining 3 Tbsp + 1 tsp granulated sugar, the milk, canola oil, butter, eggs and lemon juice. Fit mixer with paddle attachment and whip on low speed to combine (butter won't blend in at this point, but it will once dry ingredients are added).\\n\\n2)\\u00a0\\u00a0Add in all remaining ingredients and mix on low speed to combined, then increase to medium speed and mix 5 minutes (if you have the paddle attachment that constantly scrapes bowl I highly recommend it and mix on medium-low speed if using that. If not stop mixer and scrape down sides and bottom of bowl occasionally. Near the end of mixing the batter should have a consistency similar to a quick bread like banana bread).\\n\\n3)\\u00a0\\u00a0Pour bread dough into a buttered 9-by-5-inch baking dish and spread to both ends with a rubber spatula. Smooth top with wet hands, while slightly doming loaf (re-wetting hands in water as necessary. Wetting the top will also prevent it from drying out while it rises since it won't be covered - plastic can easily stick so I don't recommend using it). Transfer to a warm place free from draft to rise for 1 hour - 1 hr 15 minutes. Preheat oven to 375 degrees during last 10 minutes of rising. (Be gentle with loaf once it has risen, it is a delicate loaf so if you tap it too hard on counter or in oven it will likely deflate, so move gently).\\n\\n4)\\u00a0\\u00a0Bake bread in preheated 375 degree oven for 20 minutes, then reduce oven temperature to 350, tent loaf with foil and bake 20 minutes longer or until loaf is done (top center of loaf should no longer be doughy).\\n\\n5)\\u00a0\\u00a0Cool in loaf pan several minutes then invert onto a wire rack to cool completely. Once cool store in airtight container or resealable bag in refrigerator. Slice into 1/2-inch slices.\",\r\n        \"1)\\u00a0\\u00a0Prepare the dough: Whisk the warm water and yeast together in the bowl of your stand mixer fitted with a dough hook attachment. Cover and allow to sit for 5 minutes.\\n\\n2)\\u00a0\\u00a0Add the flour, brown sugar, salt, and vanilla extract. Beat on low speed for 2 minutes, then beat in the raisins until combined. The dough is very stiff and will look somewhat dry.\\n\\n3)\\u00a0\\u00a0Mix the sugar and cinnamon together and sprinkle onto a clean surface. Place the dough on top. Knead the dough for 4 minutes, picking up all that cinnamon sugar. Work as much of the cinnamon sugar mixture as you can into the dough. The dough may become a little wet from the added sugar– that’s ok.\\n\\n4)\\u00a0\\u00a0Lightly grease a large bowl with oil or nonstick spray. Place the dough in the bowl, turning it to coat all sides in the oil. Cover the bowl with aluminum foil, plastic wrap, or a clean kitchen towel.  Allow the dough to rise at room temperature for 60-90 minutes or until double in size.\\n\\n5)\\u00a0\\u00a0Line two large baking sheets with parchment paper or silicone baking mats.\\n\\n6)\\u00a0\\u00a0Shape the bagels: When the dough is ready, punch it down to release any air bubbles. Divide the dough into 8 equal pieces. (Just eyeball it– doesn’t need to be perfect!) Shape each piece into a ball. Press your index finger through the center of each ball to make a hole about 1.5 – 2 inches in diameter. Watch video above for a visual. Loosely cover the shaped bagels with kitchen towel and rest for a few minutes as you prepare the water bath.\\n\\n7)\\u00a0\\u00a0Preheat oven to 425°F (218°C).\\n\\n8)\\u00a0\\u00a0Water bath: Fill a large, wide pot with 2 quarts of water. Whisk in the honey. Bring water to a boil, then reduce heat to medium-high. Drop bagels in, 2-4 at a time, making sure they have enough room to float around. Cook the bagels for 1 minute on each side.\\n\\n9)\\u00a0\\u00a0Using a pastry brush, brush the egg wash on top and around the sides of each bagel. Place 4 bagels onto each lined baking sheet. Bake for 20-25 minutes, rotating the pan halfway through. You want the bagels to be a dark golden brown. Remove from the oven and allow bagels to cool on the baking sheets for 20 minutes, then transfer to a wire rack to cool completely.\\n\\n10)\\u00a0\\u00a0Slice, toast, top, whatever you want! Cover leftover bagels tightly and store at room temperature for a few days or in the refrigerator for up to 1 week.\",\r\n        \"1)\\u00a0\\u00a0Preheat oven to 375 degrees (F). Line a large baking sheet with parchment paper; set aside.\\n\\n2)\\u00a0\\u00a0In a large bowl whisk together the coconut oil, brown sugar, and vanilla, beating until well combined. Add in the coconut milk and applesauce and whisk until well combined; set aside. In a separate bowl combine the flour, baking soda, and salt; whisk well to combine.\\n\\n3)\\u00a0\\u00a0Add the dry ingredients into the wet mixture and, using a wooden spoon or very sturdy spatula, stir until ingredients are combined. The batter will be very thick! Fold in 1 and 3/4 cups of the chocolate chips.\\n\\n4)\\u00a0\\u00a0Scoop three tablespoon sized mounds of dough onto the prepared cookie sheet, leaving a few inches between each cookies for spreading. Bake for 9 to 10 minutes, or until the edges are golden and the centers have set. Press remaining chocolate chips on top of warm cookies, and sprinkle with sea salt, if using. Cool cookies on the baking sheet for 15 minutes before transferring them to a cooling rack.\",\r\n        \"1)\\u00a0\\u00a0Whisk the flour, baking soda, ginger, cinnamon, cloves, nutmeg, and salt together until combined. Set aside.\\n\\n2)\\u00a0\\u00a0In a large bowl using a hand-held or stand mixer fitted with a paddle attachment, beat the butter and both sugars together on high speed until creamy and combined, about 2 minutes. Add the molasses and beat until combined. Then add the egg and vanilla extract and beat until combined, about 1 minute. Scrape down the sides and bottom of the bowl as needed.\\n\\n3)\\u00a0\\u00a0On low speed, slowly mix the dry ingredients into the wet ingredients until combined. The cookie dough will be slightly sticky. Cover dough tightly with aluminum foil or plastic wrap and chill for 1 hour and up to 2-3 days.\\n\\n4)\\u00a0\\u00a0Preheat oven to 350°F (177°C). Line two large baking sheets with parchment paper or silicone baking mats. (Always recommended for cookies.) Set aside.\\n\\n5)\\u00a0\\u00a0Remove cookie dough from the refrigerator. If the cookie dough chilled longer than 2 hours, let it sit at room temperature for at least 30 minutes. The cookies may not spread in the oven if the dough is that cold. Roll cookie dough, 1 Tablespoon each, into balls. Roll each in granulated sugar and arrange 3 inches apart on the baking sheets. Bake for 11-12 minutes or until edges appear set. If the tops aren’t appearing cracked as pictured, remove the baking sheet from the oven and gently bang it on the counter 2-3x. This will help those warm cookies spread out and crack on top. Return to the oven for 1 additional minute.\\n\\n6)\\u00a0\\u00a0Remove from the oven and allow cookies to cool on the baking sheet for 5 minutes before transferring to a wire rack to cool completely.\\n\\n7)\\u00a0\\u00a0Cookies will stay fresh covered at room temperature for 1 week.\"\r\n    ]\r\n}\r\n\r\nexport default recipeData;\r\n","import React, {Fragment, useEffect, useRef, useState} from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport {useHistory} from 'react-router-dom';\nimport NavBar, {Divide, Footer} from \"./Common\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport recipeData from \"./resources/recipeText\";\nimport {useLocation} from \"react-router-dom\";\n\nconst useStyles = makeStyles(() => ({\n    standardText: {\n        fontSize: \"1.1em\"\n    },\n    bigImage: {\n        width: \"25em\",\n        height: \"auto\",\n        paddingLeft: \"1em\",\n        paddingRight: \"1em\"\n    },\n    sideAlign: {\n        marginLeft: \"10%\",\n        maxWidth: \"70%\"\n    },\n    sideAlignText: {\n        marginLeft: \"10%\",\n        maxWidth: \"70%\",\n        fontSize: \"1.1em\"\n    },\n    bold: {\n        fontWeight: \"bold\"\n    }\n}));\n\nfunction App() {\n    const classes = useStyles();\n    const history = useHistory();\n    const location = useLocation();\n\n    const aboutRef = useRef(null);\n    const recipeRef = useRef(null);\n    const contactRef = useRef(null);\n\n    let initialLang = 0;\n    if (history.location.state !== undefined && history.location.state.lang !== undefined) {\n        initialLang = history.location.state.lang;\n    }\n    const [lang, setLang] = useState(initialLang);\n\n    useEffect(() => {\n        setTimeout(() => {\n            if (location.hash === \"\") {\n                window.scroll(0, 0);\n            } else if (location.hash === \"#about\") {\n                window.scroll(0, contactRef.current.getBoundingClientRect().top - 55);\n            } else if (location.hash === \"#recipes\") {\n                window.scroll(0, contactRef.current.getBoundingClientRect().top - 55);\n            } else if (location.hash === \"#contact\") {\n                window.scroll(0, contactRef.current.getBoundingClientRect().top - 55);\n            }\n        }, 50);\n    }, [location]);\n\n    return (\n        <Fragment>\n            <NavBar lang={lang} setLang={setLang}/>\n            <Typography align=\"center\" variant=\"h3\" className={classes.bold}>Bake From Home</Typography>\n            <Typography align=\"center\" className={classes.standardText}>Easy baking recipes you can make from\n                home.</Typography>\n            <Grid container justify=\"center\">\n                <img className={classes.bigImage} src={recipeData.images[0]} alt={recipeData.names[0]}/>\n                <img className={classes.bigImage} src={recipeData.images[1]} alt={recipeData.names[1]}/>\n                <img className={classes.bigImage} src={recipeData.images[3]} alt={recipeData.names[3]}/>\n            </Grid>\n            <Divide/>\n            <div ref={aboutRef}/>\n            <Typography className={classes.sideAlign} variant=\"h4\">About</Typography>\n            <Typography className={classes.sideAlign}>We </Typography>\n            <br/>\n            <Divide/>\n            <div ref={recipeRef}/>\n            <Typography className={classes.sideAlign} variant=\"h4\">Recipes</Typography>\n            <Typography className={classes.sideAlignText}>Find a baking recipe that's perfect for you! Search for\n                recipes by food name, dietary preference, and by ingredients in your kitchen.</Typography>\n            <Grid container className={classes.sideAlign}>\n                <Button variant=\"contained\" color=\"primary\" onClick={() => history.push(\"/recipes\", {lang: lang})}>Go\n                    to Recipe Finder</Button>\n            </Grid>\n            <br/>\n            <Divide/>\n            <div ref={contactRef}/>\n            <Typography className={classes.sideAlign} variant=\"h4\">Contact Us</Typography>\n            <Typography className={classes.sideAlignText}>Have any questions or suggestions? Reach us at\n                help@bakefromhome.com, or 555-555-5555.</Typography>\n            <br/>\n            <Footer/>\n        </Fragment>\n    );\n}\n\nexport default App;\n","const recipeReviews = {\r\n    reviewerNames: [\r\n        [\"Liam\", \"Noah\", \"Emma\", \"Sophia\", \"Ava\"],\r\n        [\"Evelyn\", \"Lucas\"],\r\n        [\"Oliver\", \"Charlotte\", \"Chris\"],\r\n        [\"Logan\"],\r\n        [\"Chloe\", \"Evan\", \"Olivia\"],\r\n        [\"Rob\", \"Anna\", \"Sarah\", \"Jack\"]\r\n    ],\r\n    ratings: [\r\n        [5, 3, 4, 5, 5],\r\n        [4, 5],\r\n        [1, 5, 4],\r\n        [5],\r\n        [2, 3, 5],\r\n        [4, 5, 3, 5]\r\n    ],\r\n    reviews: [\r\n        [\"I baked these for my family and everyone loved them!\", \"The cookies were a bit too dry inside, even though I followed the baking time.\", \"Nice recipe! I needed a bit more flour than it called for.\", \"My favourite cookies!\", \"Turns out perfect every time.\"],\r\n        [\"Always good\", \"Best cinnamon rolls ever!\"],\r\n        [\"My bread didn't rise.\", \"Better than wheat bread!\", \"Pretty good but needs more flavour.\"],\r\n        [\"Best bagels I ever tried!\"],\r\n        [\"The cookies turned out very crunchy and burnt.\", \"I've had better vegan chocolate chip cookies.\", \"Exactly what I was looking for!\"],\r\n        [\"This is a great recipe!\", \"Everyone I bake these for loves them.\", \"Could use more molasses.\", \"My favourite cookies!\"]\r\n    ]\r\n}\r\n\r\nexport default recipeReviews;\r\n","import React, {Fragment, useEffect, useState} from \"react\";\nimport NavBar, {Divide, Footer, getRatingAverage} from \"./Common\";\nimport Typography from \"@material-ui/core/Typography\";\nimport recipeData from \"./resources/recipeText\";\nimport Vegan from \"./resources/vegan.png\"\nimport GlutenFree from \"./resources/glutenFree.png\"\nimport Grid from \"@material-ui/core/Grid\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Rating from \"@material-ui/lab/Rating\";\nimport recipeReviews from \"./resources/recipeReviews\";\nimport Button from \"@material-ui/core/Button\";\nimport {useHistory} from \"react-router-dom\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\n\nconst useStyles = makeStyles((theme) => ({\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n    },\n    selectEmpty: {\n        marginTop: theme.spacing(2),\n    },\n    recipeMargin: {\n        marginLeft: \"10%\",\n        maxWidth: \"70%\"\n    },\n    dietIcon: {\n        width: \"2em\",\n        height: \"2em\"\n    },\n    recipeDescription: {\n        marginLeft: \"10%\",\n        maxWidth: \"70%\",\n        fontSize: \"1.1em\"\n    },\n    paragraphFade: {\n        fontSize: \"1.1em\",\n        background: \"-webkit-linear-gradient(#000000, #FFFFFF)\",\n        WebkitBackgroundClip: \"text\",\n        WebkitTextFillColor: \"transparent\"\n    },\n    recipeImage: {\n        width: \"13em\",\n        height: \"auto\",\n        paddingLeft: \"5em\"\n    },\n    standardFont: {\n        fontSize: \"1.1em\"\n    },\n    minorTitle: {\n        fontWeight: \"bold\",\n        fontSize: \"1.3em\"\n    },\n    divideColour: {\n        backgroundColor: \"#F50057\",\n        height: \"0.15em\"\n    },\n    bold: {\n        fontWeight: \"bold\"\n    }\n}));\n\nfunction Finder() {\n    const classes = useStyles();\n    const history = useHistory();\n\n    let initialLang = 0;\n    if (history.location.state !== undefined && history.location.state.lang !== undefined) {\n        initialLang = history.location.state.lang;\n    }\n    const [lang, setLang] = useState(initialLang);\n\n    useEffect(() => {\n        window.scrollTo(0, 0);\n    }, []);\n\n    const initialRecipesFound = new Array(recipeData.names.length);\n    for (let i = 0; i < initialRecipesFound.length; i++) {\n        initialRecipesFound[i] = i;\n    }\n\n    const [recipesFound, setRecipesFound] = useState(initialRecipesFound);\n    const [recipeText, setRecipeText] = useState(\" Recipes Found\");\n    const [preferences, setPreferences] = useState([false, false]);\n    const [searchStr, setSearchStr] = useState(\"\");\n    const [recipeType, setRecipeType] = useState('');\n\n    function Icons({rIndex}) {\n        if (recipeData.vegan[rIndex]) {\n            return <img src={Vegan} className={classes.dietIcon} title=\"Vegan\" alt=\"Vegan\"/>\n        }\n        if (recipeData.glutenFree[rIndex]) {\n            return <img src={GlutenFree} className={classes.dietIcon} title=\"Gluten Free\" alt=\"Gluten Free\"/>\n        }\n        return <Fragment/>\n    }\n\n    function updateType(event) {\n        setRecipeType(event.target.value);\n        generateList(searchStr, preferences[0], preferences[1], event.target.value)\n    }\n\n    function searchRecipes(event) {\n        setSearchStr(event.target.value);\n        generateList(event.target.value, preferences[0], preferences[1], recipeType)\n    }\n\n    function updatePreference(preference) {\n        let vegan = preferences[0], glutenFree = preferences[1];\n        if (preference === \"vegan\") {\n            vegan = !vegan;\n        } else {\n            glutenFree = !glutenFree;\n        }\n        setPreferences([vegan, glutenFree]);\n        generateList(searchStr, vegan, glutenFree, recipeType);\n    }\n\n    function generateList(searchStr, isVegan, isGlutenFree, recipeType) {\n        const newRecipes = [];\n        const searchActive = searchStr !== \"\";\n        const typeActive = recipeType !== \"\";\n        for (let i = 0; i < recipeData.names.length; i++) {\n            if (searchActive && !recipeData.names[i].toLowerCase().includes(searchStr.toLowerCase())) {\n                continue;\n            }\n            if (isVegan && !recipeData.vegan[i]) {\n                continue;\n            }\n            if (isGlutenFree && !recipeData.glutenFree[i]) {\n                continue;\n            }\n            if (typeActive && recipeType !== recipeData.types[i]) {\n                continue;\n            }\n            newRecipes.push(i);\n        }\n        setRecipesFound(newRecipes);\n        if (newRecipes.length === 1) {\n            setRecipeText(\" Recipe Found\");\n        } else {\n            setRecipeText(\" Recipes Found\");\n        }\n    }\n\n    return (\n        <Fragment>\n            <NavBar lang={lang} setLang={setLang}/>\n            <Typography align=\"center\" variant=\"h3\" className={classes.bold}>Search For Recipes</Typography>\n            <Typography className={classes.recipeMargin} variant=\"h4\">Filter by...</Typography>\n            <Grid container justify=\"space-between\" alignItems=\"stretch\" className={classes.recipeMargin}>\n                <Grid item>\n                    <Typography className={classes.minorTitle}>Recipe title:</Typography>\n                    <TextField id=\"outlined-basic\" label=\"Title\" variant=\"outlined\" color=\"secondary\"\n                               onChange={searchRecipes}/>\n                </Grid>\n                <Grid item>\n                    <Typography className={classes.minorTitle}>Dietary preferences:</Typography>\n                    <FormControlLabel value=\"vegan\" className={classes.standardFont}\n                                      control={<Checkbox onChange={() => updatePreference(\"vegan\")}/>} label=\"Vegan\"/>\n                    <br/>\n                    <FormControlLabel value=\"glutenFree\" className={classes.standardFont}\n                                      control={<Checkbox onChange={() => updatePreference(\"glutenFree\")}/>}\n                                      label=\"Gluten-free\"/>\n                </Grid>\n                <Grid item>\n                    <Typography className={classes.minorTitle}>Type of recipe:</Typography>\n                    <FormControl className={classes.formControl}>\n                        <Select\n                            value={recipeType}\n                            onChange={updateType}\n                            color=\"secondary\"\n                            displayEmpty\n                            className={classes.selectEmpty}\n                            inputProps={{'aria-label': 'Recipe Type'}}\n                        >\n                            <MenuItem value=\"\">\n                                <em>Any</em>\n                            </MenuItem>\n                            <MenuItem value=\"cookies\">Cookies</MenuItem>\n                            <MenuItem value=\"pastries\">Pastries</MenuItem>\n                            <MenuItem value=\"bread\">Bread</MenuItem>\n                        </Select>\n                    </FormControl>\n                </Grid>\n            </Grid>\n            <br/>\n            <Typography className={classes.recipeMargin} variant=\"h4\">{recipesFound.length + recipeText}</Typography>\n            <Divider className={classes.divideColour}/>\n            <br/>\n            {\n                recipesFound.map(i => {\n                    const ratingAvg = getRatingAverage(recipeReviews.ratings[i]);\n                    const ratingNum = parseFloat(ratingAvg);\n                    const reviewWord = recipeReviews.ratings[i].length === 1 ? \" review\" : \" reviews\";\n                    const maxDescIndex = Math.min(800, recipeData.descriptions[i].length)\n                    const shortDescription = recipeData.descriptions[i].substring(0, maxDescIndex);\n                    return (\n                        <Fragment key={i}>\n                            <Grid container alignItems=\"flex-start\">\n                                <Grid container item xs={6} className={classes.recipeMargin}>\n                                    <Grid container item>\n                                        <Typography className={classes.minorTitle}\n                                                    variant={\"h5\"}>{recipeData.names[i] + \"\\u00a0\"}</Typography>\n                                        <Icons rIndex={i}/>\n                                    </Grid>\n                                    <Grid container item>\n                                        <Typography className={classes.standardFont}>{ratingAvg + \"\\u00a0\"}</Typography>\n                                        <Divider orientation=\"vertical\" flexItem/>\n                                        <Typography>{\"\\u00a0\"}</Typography>\n                                        <Rating value={ratingNum} precision={0.1} readOnly/>\n                                        <Typography>{\"\\u00a0\"}</Typography>\n                                        <Divider orientation=\"vertical\" flexItem/>\n                                        <Typography\n                                            className={classes.standardFont}>{\"\\u00a0\" + recipeReviews.ratings[i].length + reviewWord}</Typography>\n                                    </Grid>\n                                    <Typography className={classes.paragraphFade}>{shortDescription}</Typography>\n                                </Grid>\n                                <Grid item xs={3}>\n                                    <img className={classes.recipeImage} src={recipeData.images[i]}\n                                         alt={recipeData.names[i]}/>\n                                </Grid>\n                                <Grid item xs={12}>\n                                    <Button className={classes.recipeMargin} variant=\"contained\" color=\"primary\"\n                                            onClick={() => history.push(\"/recipes/\" + recipeData.paths[i], {lang: lang})}>\n                                        Go To Recipe\n                                    </Button>\n                                </Grid>\n                            </Grid>\n                            <br/>\n                            <Divide/>\n                        </Fragment>\n                    )\n                })\n            }\n            <Footer/>\n        </Fragment>\n    );\n}\n\nexport default Finder;\n","import React, {Fragment, useState} from 'react';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport NavBar from \"./Common\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    standard: {\r\n        marginLeft: \"10%\",\r\n        maxWidth: \"70%\"\r\n    }\r\n}));\r\n\r\nfunction NotFound() {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n\r\n    const [lang, setLang] = useState(0);\r\n\r\n    return (\r\n        <Fragment>\r\n            <NavBar lang={lang} setLang={setLang}/>\r\n            <Typography className={classes.standard} variant=\"h3\">Page not found!</Typography>\r\n            <br/>\r\n            <Button className={classes.standard} variant=\"contained\" color=\"primary\"\r\n                    onClick={() => history.push(\"/\", {lang: lang})}>Return Home</Button>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default NotFound;\r\n","import React, {Fragment, useEffect, useState} from \"react\";\r\nimport {Route} from \"react-router-dom\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport NavBar, {Divide, Footer, getRatingAverage} from \"./Common\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport ScrollableAnchor, {configureAnchors} from 'react-scrollable-anchor'\r\nimport recipeData from \"./resources/recipeText\";\r\nimport recipeReviews from \"./resources/recipeReviews\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport NotFound from \"./NotFound\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport {useLocation} from \"react-router-dom\";\r\nimport {useHistory} from \"react-router\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    recipeImage: {\r\n        width: \"24em\",\r\n        height: \"auto\"\r\n    },\r\n    recipeParagraph: {\r\n        marginLeft: \"10%\",\r\n        maxWidth: \"70%\",\r\n        fontSize: \"1.1em\",\r\n        whiteSpace: \"pre-line\"\r\n    },\r\n    recipeStandard: {\r\n        marginLeft: \"10%\",\r\n        maxWidth: \"70%\"\r\n    },\r\n    textField: {\r\n        marginTop: \"1em\",\r\n        marginLeft: \"10%\",\r\n        width: \"30em\"\r\n    },\r\n    reviewerName: {\r\n        marginLeft: \"10%\",\r\n        maxWidth: \"70%\",\r\n        fontWeight: \"bold\",\r\n        fontSize: \"1.3em\"\r\n    },\r\n    bold: {\r\n        fontWeight: \"bold\"\r\n    },\r\n    standardFont: {\r\n        fontSize: \"1.1em\"\r\n    }\r\n}));\r\n\r\nfunction Recipes() {\r\n    const classes = useStyles();\r\n    const location = useLocation();\r\n    const history = useHistory();\r\n\r\n    configureAnchors({offset: -55, scrollDuration: 0});\r\n\r\n    const path = window.location.pathname.substring(9);\r\n    const rIndex = recipeData.paths.indexOf(path);\r\n    let tmpIndex = rIndex;\r\n    if (rIndex === -1) {\r\n        tmpIndex = 0;\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (location.hash === \"\") {\r\n            window.scroll(0, 0);\r\n        }\r\n    }, [location]);\r\n\r\n    const [ratingAvg, setRatingAvg] = useState(getRatingAverage(recipeReviews.ratings[tmpIndex]));\r\n    const [ratingAvgNum, setRatingAvgNum] = useState(parseFloat(ratingAvg));\r\n    const [reviewWord, setReviewWord] = useState(recipeReviews.ratings[tmpIndex].length === 1 ? \" review\" : \" reviews\");\r\n    const [reviewerNames, setReviewerNames] = useState(recipeReviews.reviewerNames[tmpIndex]);\r\n    const [ratings, setRatings] = useState(recipeReviews.ratings[tmpIndex]);\r\n    const [reviews, setReviews] = useState(recipeReviews.reviews[tmpIndex]);\r\n\r\n    const [newName, setNewName] = useState(\"\");\r\n    const [newReview, setNewReview] = useState(\"\");\r\n    const [newRating, setNewRating] = useState(0);\r\n    const [showNameError, setShowNameError] = useState(false);\r\n\r\n    let initialLang = 0;\r\n    if (history.location.state !== undefined && history.location.state.lang !== undefined) {\r\n        initialLang = history.location.state.lang;\r\n    }\r\n    const [lang, setLang] = useState(initialLang);\r\n\r\n    if (rIndex === -1) {\r\n        return (\r\n            <NotFound/>\r\n        );\r\n    }\r\n\r\n    function postReview() {\r\n        if (newName === \"\") {\r\n            setShowNameError(true);\r\n            return;\r\n        }\r\n        const newNames = [newName].concat(reviewerNames);\r\n        const newRatings = [newRating].concat(ratings);\r\n        const newReviews = [newReview].concat(reviews);\r\n        const newRatingAvg = getRatingAverage(newRatings);\r\n        const newRatingAvgNum = parseFloat(ratingAvg);\r\n\r\n        setReviewWord(newReviews.length === 1 ? \" review\" : \" reviews\");\r\n        setReviewerNames(newNames);\r\n        setRatingAvg(newRatingAvg);\r\n        setRatingAvgNum(newRatingAvgNum);\r\n        setRatings(newRatings);\r\n        setReviews(newReviews);\r\n\r\n        setNewName(\"\");\r\n        setNewRating(0);\r\n        setNewReview(\"\");\r\n    }\r\n\r\n    return (\r\n        <Route path={\"/recipes/\" + path} key={path}>\r\n            <NavBar lang={lang} setLang={setLang}/>\r\n            <Typography align=\"center\" variant=\"h3\"\r\n                        className={classes.bold}>{recipeData.names[rIndex] + \"\\u00a0\"}</Typography>\r\n            <Grid container justify=\"center\">\r\n                <Rating value={ratingAvgNum} precision={0.1} readOnly/>\r\n                <Divider orientation=\"vertical\" flexItem/>\r\n                <Typography>{\"\\u00a0\"}</Typography>\r\n                <a href=\"#reviews\">\r\n                    <Typography className={classes.standardFont}>{ratings.length + reviewWord}</Typography>\r\n                </a>\r\n            </Grid>\r\n            <br/>\r\n            <Grid container justify=\"center\">\r\n                <img src={recipeData.images[rIndex]} alt={recipeData.names[rIndex]} className={classes.recipeImage}/>\r\n            </Grid>\r\n            <br/>\r\n            <Typography className={classes.recipeParagraph}>{recipeData.descriptions[rIndex]}</Typography>\r\n            <Divide/>\r\n            <Typography className={classes.recipeStandard} variant=\"h4\">Ingredients</Typography>\r\n            <Typography className={classes.recipeParagraph}>{recipeData.ingredients[rIndex]}</Typography>\r\n            <Divide/>\r\n            <Typography className={classes.recipeStandard} variant=\"h4\">Instructions</Typography>\r\n            <Typography className={classes.recipeParagraph}>{recipeData.instructions[rIndex]}</Typography>\r\n            <Divide/>\r\n            <ScrollableAnchor id={\"reviews\"}>\r\n                <Typography className={classes.recipeStandard} variant=\"h4\" id=\"reviews\">Reviews</Typography>\r\n            </ScrollableAnchor>\r\n            <Grid container className={classes.recipeStandard}>\r\n                <Typography className={classes.standardFont}>{ratingAvg + \"\\u00a0\"}</Typography>\r\n                <Divider orientation=\"vertical\" flexItem/>\r\n                <Typography>{\"\\u00a0\"}</Typography>\r\n                <Rating value={ratingAvgNum} precision={0.1} readOnly/>\r\n                <Typography>{\"\\u00a0\"}</Typography>\r\n                <Divider orientation=\"vertical\" flexItem/>\r\n                <Typography className={classes.standardFont}>{\"\\u00a0\" + ratings.length + reviewWord}</Typography>\r\n            </Grid>\r\n            <br/>\r\n            <Rating name=\"review-rating\" value={newRating} className={classes.recipeStandard}\r\n                    onChange={(_, newValue) => setNewRating(newValue)}/>\r\n            <br/>\r\n            <TextField\r\n                className={classes.recipeStandard}\r\n                label=\"Name\"\r\n                variant=\"outlined\"\r\n                value={newName}\r\n                color=\"secondary\"\r\n                onChange={e => {\r\n                    setNewName(e.target.value);\r\n                    setShowNameError(false);\r\n                }}\r\n                error={showNameError}\r\n                helperText={showNameError ? \"Please enter your name.\" : \"\"}\r\n            />\r\n            <br/>\r\n            <TextField\r\n                id=\"outlined-multiline-static\"\r\n                label=\"Leave feedback (optional)\"\r\n                multiline\r\n                color=\"secondary\"\r\n                rows={4}\r\n                className={classes.textField}\r\n                variant=\"outlined\"\r\n                value={newReview}\r\n                onChange={e => setNewReview(e.target.value)}\r\n            />\r\n            <br/><br/>\r\n            <Button className={classes.recipeStandard} variant=\"contained\" color=\"primary\" onClick={() => postReview()}>\r\n                Post\r\n            </Button>\r\n            <br/>\r\n            <Divide/>\r\n            {\r\n                reviewerNames.map((name, index) => {\r\n                    return (\r\n                        <Fragment key={index}>\r\n                            <Grid container>\r\n                                <Typography className={classes.reviewerName}>{name}</Typography>\r\n                                <Rating value={ratings[index]} readOnly/>\r\n                            </Grid>\r\n                            <Typography\r\n                                className={classes.recipeParagraph}>{reviews[index]}</Typography>\r\n                            <br/>\r\n                        </Fragment>\r\n                    )\r\n                })\r\n            }\r\n            <br/>\r\n            <Footer/>\r\n        </Route>\r\n    )\r\n}\r\n\r\nexport default Recipes;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport Finder from \"./Finder\";\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route\n} from \"react-router-dom\";\nimport Recipes from \"./Recipes\";\nimport NotFound from \"./NotFound\";\n\nReactDOM.render(\n    <Router>\n        <Switch>\n            <Route exact path=\"/\">\n                <App/>\n            </Route>\n            <Route exact path=\"/seg3125-react-lab\">\n                <App/>\n            </Route>\n            <Route exact path=\"/recipes\">\n                <Finder/>\n            </Route>\n            <Route path=\"/recipes\">\n                <Recipes/>\n            </Route>\n            <Route path=\"/\">\n                <NotFound/>\n            </Route>\n        </Switch>\n    </Router>,\n    document.getElementById(\"root\")\n);\n","module.exports = __webpack_public_path__ + \"static/media/logo_en.182afd5c.png\";","module.exports = __webpack_public_path__ + \"static/media/sugarCookies.2c563aa3.jpg\";"],"sourceRoot":""}